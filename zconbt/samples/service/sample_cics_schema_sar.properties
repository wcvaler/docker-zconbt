## CICS service provider build toolkit sample properties file for creating a 
## service from existing JSON schemas.

## REQUIRED PROPERTIES (For optional properties, see below.) ##
provider=cics
name=
version=
description=
connectionRef=
program=
language=
programInterface=
requestSchema=
responseSchema=
generatedRequestStructure=
generatedResponseStructure=

## REQUIRED PROPERTIES - DESCRIPTIONS ##
# provider : Set to 'cics' to build a SAR file for the CICS service provider.
# name : The name of the service.
# version : The version of the service.
# description : The description of the service.
# connectionRef : The ID of the zosconnect_cicsIpicConnection or
#     zosconnect_cicsLocalConnection element that defines the CICS connection.
# program : The CICS program to invoke.
# language : The language of the CICS program. Valid values are COBOL, C, CPP,
#     PLI-ENTERPRISE or PLI-OTHER.
# programInterface : The program interface for the CICS program. Valid values
#     are COMMAREA or CHANNEL.
# requestSchema : The relative or absolute path to the request JSON schema.
# responseSchema : The relative or absolute path to the response JSON schema.
# generatedRequestStructure : The relative or absolute path of the file or PDS
#     to contain the high-level language structures for the request.
# generatedResponseStructure : The relative or absolute path to the file or PDS
#     to contain the high-level language structures for the response.

## OPTIONAL PROPERTIES ##
#ccsid=
#characterVarying=
#dataScreening=
#dataTruncation=
#languageStructureCodePage=
#structure=
#transid=
#transidUsage=
#useContextContainers=
#httpHeaders=
#characterMultiplier=
#characterVaryingLimit=
#characterWhitespace=
#dateTime=
#defaultCharacterMaxLength=
#inlineMaxOccursLimit=
#mappingOverrides=
#nameTruncation=
#wideComp3=

## OPTIONAL PROPERTIES - DESCRIPTIONS ##
# ccsid : The CCSID used at run time to encode character data in COMMAREA and 
#     BIT containers. The default is 037 (EBCDIC).
# characterVarying : Specifies how character fields in the language structure
#     are mapped. Valid values are NO, NULL, COLLAPSE & BINARY.
# dataScreening : Specifies whether application supplied data is screened for
#     errors. Valid values are ENABLED & DISABLED. The default is ENABLED.
# dataTruncation : Specifies if variable length data is tolerated in a
#     fixed-length field structure. Valid values are ENABLED & DISABLED. The
#     default is DISABLED.
# languageStructureCodePage : The Java character set name for the encoding of 
#     the source language structures specified by requestStructure, 
#     responseStructure or referenced from a channel description document. For 
#     example, for IBM® Latin-1 EBCDIC, the value is IBM037.
# structure : The names of the high-level language structures to be created in  
#     the file or partitioned data set members specified by the
#     generatedRequestStructure and generatedResponseStructure properties. This 
#     property is valid only for C and C++ languages. The value has the format
#     (request,response). The default request structure name is DFHREQUEST and
#     the default response structure name is DFHRESPONSE.
# transid : A CICS transaction name. This property overrides the transid 
#     attribute on the zosconnect_cicsIpicConnection element, but can be 
#     overridden by setting the transid on the zosconnect_services element. The 
#     usage of this property varies depending on the transidUsage property.
# transidUsage : Specifies how the transid property value is used. This
#     property only applies to services using IPIC connections to CICS. It 
#     overrides the transidUsage set on the zosconnect_cicsIpicConnection, but 
#     can be overridden by setting the transidUsage on the zosconnect_services 
#     element. Valid values are EIB_ONLY & EIB_AND_MIRROR.
# useContextContainers : Specifies whether context containers are sent to CICS.
#     Valid values are true or false.
# httpHeaders : A comma-separated list of header names to include in the
#     BAQHTTPHEADERS context container if they are present on the HTTP request.
# characterMultiplier : The number of bytes to allow for each character. All 
#     non-numeric character-based mappings are subject to this multiplier. 
#     Binary, numeric, zoned, and packed decimal fields are not subject to this
#     multiplier. The default is 1.
# characterVaryingLimit : The maximum size of binary data and variable-length 
#     character data that is mapped to the language structure. The value ranges 
#     from 0 to the default 32767 bytes.
# characterWhitespace : Specifies how white space in values of type string is
#     handled by z/OS Connect EE. Valid values are COLLAPSE, REPLACE and 
#     PRESERVE. The default value is COLLAPSE.
# dateTime : Specifies how JSON date-time format properties are mapped to the
#     language structure. Valid values are PACKED15 and STRING. The default is
#     PACKED15.
# defaultCharacterMaxLength : The default array length of character data in 
#     characters for mappings where no length is implied in the JSON schema. The 
#     default is 255.
# inlineMaxOccursLimit : Specifies whether inline variable repeating content is
#     used based on the maxItems JSON schema keyword. The default is 1.
# mappingOverrides : Specifies whether the default behavior is overridden when
#     generating language structures. One or more options can be specified in a
#     comma-separated list. Valid values are SAME-AS-MAPPING-LEVEL,
#     UNDERSCORES-AS-HYPHENS, INTEGER-AS-PIC9 and LESS-DUP-NAMES. The default is
#     UNDERSCORES-AS-HYPHENS for COBOL and SAME-AS-MAPPING-LEVEL for other
#     languages.
# nameTruncation : Specifies whether JSON names are truncated from the left or
#     the right. Valid values are RIGHT and LEFT. The default is right.
# wideComp3 : Controls the maximum size of the packed decimal variable length
#     in the generated COBOL or PL/I language structure. Valid values are YES 
#     and NO. The default is YES.